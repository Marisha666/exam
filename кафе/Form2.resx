<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACAAAAAgAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB8kJwAfJCcAHyQnAB8kJwEfJCcEHyQnBB8kJwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8k
        JwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8kJwIfJCcAHyQnAB8kJwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHyQnAB8kJwAfJCcBHyQnAh8kJwAfJCcAHyQbAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8kJwAfJCcAHyQnAR8kJwIfJCcAHyQnAB8k
        JwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfJCcAHyQnAR8kJwAfJCcIHyQnWx8kJ4YfJCeDHyQnhB8k
        J4QfJCeEHyQnhB8kJ4QfJCeEHyQnhB8kJ4QfJCeEHyQnhB8kJ4QfJCeDHyQnhR8kJ3cfJCcjHyQnAB8k
        JwIfJCcAHyQnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8kJwEfJCcAHyQnCB8kJ74fJCf/HyQn/R8k
        J/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf+HyQn/x8k
        J/UfJCdAHyQnAB8kJwIfJCcAHyQnAAAAAAAAAAAAAAAAAAAAAAAAAAAAHyQnBB8kJwAfJCdzHyQn/x8k
        J/gfJCf7HyQn+x8kJ/sfJCf7HyQn+x8kJ/sfJCf7HyQn+x8kJ/sfJCf7HyQn+x8kJ/sfJCf7HyQn+x8k
        J/sfJCf5HyQn/x8kJ88fJCcEHyQnAB8kJwEfJCcAAAAAAAAAAAAAAAAAAAAAAAAAAAAfJCcAHyQnER8k
        J+MfJCf/HyQn/R8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8k
        J/8fJCf/HyQn/x8kJ/8fJCf7HyQn/x8kJ1cfJCcAHyQnAx8kJwAAAAAAAAAAAAAAAAAAAAAAAAAAAB8k
        JwAfJCdsHyQn/x8kJ/sfJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/wfJCf8HyQn/R8kJ/4fJCf/HyQn/x8k
        J/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/wfJCf/HyQntx8kJwAfJCcCHyQnACAjJwAAAAAAAAAAAAAA
        AAAAAAAAHyQoAB8kJ8kfJCf/HyQn/R8kJ/8fJCf/HyQn/x8kJ/8fJCf+HyQn/x8kJ/8fJCf/HyQn/h8k
        J/sfJCf+HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/h8kJ/8fJCf1HyQnIB8kJwAfJCcCHyQnAAAA
        AAAAAAAAAAAAAAAAAAAfJCc3HyQn/B8kJ/8fJCf/HyQn/x8kJ/8fJCf+HyQn/x8kJ/sfJCfMHyQnuB8k
        J9MfJCf6HyQn/x8kJ/0fJCf9HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/B8kJ/8fJCdeHyQnAB8k
        JwcfJCcBHyQnAB8kJwAfJCcAAAAAAB8kJ3wfJCf/HyQn/B8kJ/8fJCf/HyQn/h8kJ/sfJCf/HyQnah8k
        JwAfJCcDHyQoAR8kJyUfJCeSHyQn+R8kJ/8fJCf9HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf7HyQn/x8k
        J5wfJCcAHyQnAx8kJwEfJCcCHyQnAB8kJwAfJCcAHyQnth8kJ/8fJCf9HyQn/x8kJ/8fJCf/HyQn9x8k
        J/8fJCdiHyQnAB8kJwcfJCcAHyQnAh8kJwAfJCc0HyQn4B8kJ/8fJCf9HyQn/x8kJ/8fJCf/HyQn/x8k
        J/0fJCf/HyQnzh8kJzcfJCdIHyQnDh8kJwAfJCcCHyQnAB8kJwAfJCfeHyQn/x8kJ/4fJCf+HyQn/x8k
        J/kfJCcwHyQnox8kJ/ofJCcgHyQnAB8kJwQfJCcCHyQnBR8kJwAfJCceHyQn3R8kJ/8fJCf9HyQn/x8k
        J/8fJCf/HyQn/x8kJ/8fJCf9HyQn/R8kJ/8fJCfgHyQnLh8kJwAfJCcCHyQnAB8kJ/UfJCf/HyQn/x8k
        J/wfJCf/HyQnyB8kJwAfJCcRHyQn3h8kJ9YfJCcOHyQnAB8kJwQfJCcAHyQnBR8kJwAfJCc2HyQn+R8k
        J/8fJCf+HyQn/x8kJ/8fJCf/HyQn/h8kJ/8fJCftHyQn5h8kJ/8fJCfPHyQnCR8kJwAfJCcBHyQn/h8k
        J/8fJCf/HyQn/B8kJ/8fJCe0HyQnAB8kJwAfJCciHyQn6h8kJ9cfJCcXHyQnAB8kJwQfJCcAHyQnBR8k
        JwAfJCeHHyQn/x8kJ/wfJCf/HyQn/x8kJ/8fJCf+HyQn/x8kJ0YfJCcPHyQn1R8kJ/8fJCeIHyQnAB8k
        JwQfJCf/HyQn/x8kJ/8fJCf8HyQn/x8kJ8YfJCcAHyQnBB8kJwAfJCcdHyQn1x8kJ/QfJCc9HyQnAB8k
        JwQfJCcCHyQnAB8kJx8fJCf0HyQn/x8kJ/4fJCf/HyQn/R8kJ/8fJCfkHyQnDB8kJwAfJCcyHyQn+B8k
        J/4fJCcxHyQnAB8kJ/8fJCf/HyQn/x8kJ/4fJCf/HyQn7x8kJxcfJCcAHyQnBCUbIgAfJCcGHyQnnR8k
        J/8fJCdzHyQnAB8kJwQfJCcDHyQnAB8kJ7ofJCf/HyQn/B8kJ/8fJCf9HyQn/x8kJ98fIyYHHyQnAx8k
        JwAfJCdxHyQn/x8kJ6sfJCcAHyQn/x8kJ/8fJCf/HyQn/x8kJ/wfJCf/HyQnZR8kJwAfJCcEHyQnAh8k
        JwMfJCcAHyQnUx8kJ/8fJCeZHyQnAB8kJwYfJCcAHyQnjh8kJ/8fJCf7HyQn/x8kJ/0fJCf/HyQn3x8j
        JgYfIyYAHyQnAR8kJwMfJCfLHyQn/x8kJzofJCf/HyQn/x8kJ/8fJCf/HyQn/R8kJ/8fJCfZHyQnDB8k
        JwAfJCcBHyQnAR8kJwUfJCcAHyQnMh8kJ/sfJCejHiQnAR8kJwAfJCeHHyQn/x8kJ/sfJCf/HyQn/R8k
        J/8fJCfgHyMmBx8jJgAfJCcEHyQnAB8kJ1YfJCf/HyQnnR8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/B8k
        J/8fJCeXHyQnAB8kJwUfJCcCHyQnAB8kJwUfJCcAHyQnOR8kJ/8fJCeQHyQnAB8kJ60fJCf/HyQn/B8k
        J/8fJCf9HyQn/x8kJ98fIycIHyUoAR8kJwIfJCcAHyQnFh8kJ/QfJCfpHyQn/x8kJ/8fJCf/HyQn/x8k
        J/8fJCf/HyQn/B8kJ/8fJCd/HyQnAB8kJwIfJCcEHyQnAx8kJwcfJCcAHyQncx8kJ/8fJCd8HyQn5x8k
        J/8fJCf+HyQn/x8kJ/4fJCf/HyQn+B8kJygfJCcAHyQnBR8kJwAfJCcdHyQn9h8kJ/0fJCf/HyQn/x8k
        J/8fJCf/HyQn/x8kJ/8fJCf/HyQn/B8kJ/8fJCejHyQnER8kJwAfJCcBHyQnAR8kJwAfJCcFHyQn2R8k
        J/8fJCf9HyQn/x8kJ/8fJCf/HyQn/x8kJ/0fJCf/HyQn0B8kJyofJCcAHyQnAx8kJ54fJCf/HyQn4h8k
        J/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/B8kJ/8fJCfpHyQnhR8kJzkfJCcdHyQnIB8k
        J2cfJCf1HyQn/h8kJ/0fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/4fJCf/HyQn9h8kJ8UfJCfeHyQn/h8k
        J/8fJCeMHyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/B8kJ/4fJCf/HyQn/x8k
        J/gfJCf7HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/R8kJ/0fJCf/HyQn/x8k
        J/0fJCf/HyQnvB8kJwkfJCf+HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/h8k
        J/sfJCf9HyQn/x8kJ/8fJCf8HyQn/h8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/R8kJ/8fJCfXHyQnYB8k
        J8ofJCfhHyQn0B8kJ3sfJCcJHiQnAB8kJ/ofJCf+HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8k
        J/8fJCf/HyQn/x8kJ/8fJCf+HyQn/h8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf9HyQn/x8k
        J8sfJCcAHyQnAR8kJwcfJCcBHyQnAB8kJwIfJCcBHyQn0B8kJ/8fJCf6HyQn+x8kJ/sfJCf7HyQn+x8k
        J/sfJCf7HyQn+x8kJ/sfJCf7HyQn+x8kJ/sfJCf7HyQn+x8kJ/sfJCf7HyQn+x8kJ/sfJCf7HyQn+x8k
        J/gfJCf/HyQnjh8kJwAfJCcFHyQnAB8kJwEfJCcEHyQnAR8kJwAfJCc3HyQn4h8kJ/8fJCf+HyQn/x8k
        J/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8kJ/8fJCf/HyQn/x8k
        J/8fJCf9HyQn/x8kJ9AfJCcUHyQnAB8kJwIfJCcBHyQnAB8kJwAfJCcAHyQnAB8kJwAfJCcQHyQnWh8k
        J4EfJCeEHyQnhB8kJ4QfJCeEHyQnhB8kJ4QfJCeEHyQnhB8kJ4QfJCeEHyQnhB8kJ4QfJCeEHyQnhB8k
        J4QfJCeEHyQngx8kJ4UfJCdgHyQnDR8kJwAfJCcBHyQnAB8kJwAAAAAAAAAAAAAAAAAAAAAAHyQnAh8k
        JwEfJCcAHyQnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHyQnAB8kJwAfJCcBHyQnAR8kJwAfJCcAICUnAAAAAAAAAAAAAAAAAAAA
        AAAfJCcAHyQnAR8kJwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8k
        JwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8kJwQfJCcEHyQnBB8kJwEfJCcAHyQnAB8kJwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////6AAAn9L/+l/oAACv0AAAT9AAACfgAAAn4AAAJ+AAABfAAAASwBA
        AEUARAAKACIABQIVAAIDCIACAoSAIQFCQBEBEUAgAIhAKACUQAgAQgAoABIAEAAAAAAAAAAAAAAAAQAA
        AEQAAABRAAAARYAAAL8v//pfgAAAv/////8=
</value>
  </data>
</root>